{"version":3,"sources":["components/Footer.js","components/home.js","components/Login.js","components/Register.js","components/Splash.js","App.js","serviceWorker.js","index.js"],"names":["Footer","Component","Home","className","Login","handleChange","event","updatedUser","state","user","inputField","target","name","inputValue","value","setState","handleClick","preventDefault","username","password","alert","redirect","this","to","for","id","type","onChange","onClick","Reg","Splash","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7ca90f9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../Styling/Footer.css'\n\nclass Footer extends Component {\n  render(){\n    return(\n      <footer>\n        <p>Made by: \n          <a> Marjan Ansar</a>,\n          <a> Mathew Estrella</a>,\n          <a> Xiangmin Mo</a>,\n          <a> Yi Tong Ni</a>\n        </p>\n      </footer>\n    )\n  }\n};\n\nexport default Footer;","import React, {Component} from 'react';\nimport Footer from './Footer.js'\nimport '../Styling/Home.css';\n\nclass Home extends Component {\n  render(){\n    return(\n      <div>\n        <header className= \"homeH\">\n          <div className= \"headerL\">\n            <a>Logo?</a>\n          </div>\n          <div className= \"headerR\">\n            <a>About?</a>\n          </div>\n        </header>\n\n        <section>Section 1</section>\n\n        <Footer />\n      </div>\n    )\n  }\n};\n\nexport default Home;","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport '../Styling/Login.css';\n\nclass Login extends Component {\n  constructor(){\n    super();\n    this.state= {\n      user: {\n        username: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n  \n  handleChange= (event)=> {\n    const updatedUser= {...this.state.user}\n    const inputField= event.target.name\n    const inputValue= event.target.value\n    updatedUser[inputField]= inputValue\n    this.setState({user: updatedUser})\n  };\n\n  handleClick= (event)=> {\n    event.preventDefault();\n\n    //Needs to be better\n    if(this.state.user.username !== '' && this.state.user.password !== ''){\n      alert(\"Succesfully Registered\");\n      this.setState({redirect: true});\n    }\n    else{\n      alert(\"Error\");\n    };\n  }\n\n  render(){\n    if(this.state.redirect){\n      return(\n        <Redirect to= \"/home\" />\n      )\n    }\n\n    return(\n      <div className= \"entire-box\">\n        <p className= \"title\">Register</p>\n        <form className= \"formL\">\n          <label for= \"un\">Username:</label>\n          <input id= \"un\" name= \"username\" type= \"text\" value= {this.state.user.username} onChange= {this.handleChange} />\n          <label for= \"pw\">Password:</label>\n          <input id= \"pw\" name= \"password\" type= \"password\" value= {this.state.user.password} onChange= {this.handleChange} />\n          <br />\n          <button id= \"sign\" onClick= {this.handleClick}>Log In</button>\n        </form>\n      </div>\n    )\n  };\n\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"../Styling/Login.css\";\nimport axios from \"axios\";\n\nclass Reg extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {\n        username: \"\",\n        password: \"\"\n      },\n      redirect: false\n    };\n  }\n\n  handleChange = event => {\n    const updatedUser = { ...this.state.user };\n    const inputField = event.target.name;\n    const inputValue = event.target.value;\n    updatedUser[inputField] = inputValue;\n    this.setState({ user: updatedUser });\n  };\n\n  handleClick = event => {\n    event.preventDefault();\n\n    //Needs to be better\n    if (this.state.user.username !== \"\" && this.state.user.password !== \"\") {\n      alert(\"Succesfully Registered\");\n      this.setState({ redirect: true });\n    } else {\n      alert(\"Error\");\n    }\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/home\" />;\n    }\n\n    return (\n      <div className=\"entire-box\">\n        <p className=\"title\">Sign In</p>\n        <form className=\"formL\">\n          <label for=\"un\">Username:</label>\n          <input\n            id=\"un\"\n            name=\"username\"\n            type=\"text\"\n            value={this.state.user.username}\n            onChange={this.handleChange}\n          />\n          <label for=\"pw\">Password:</label>\n          <input\n            id=\"pw\"\n            name=\"password\"\n            type=\"password\"\n            value={this.state.user.password}\n            onChange={this.handleChange}\n          />\n          <br />\n          <button id=\"reg\" onClick={this.handleClick}>\n            Register\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Reg;\n","import React, {Component} from 'react';\nimport Login from './Login.js';\nimport Reg from './Register.js';\nimport Footer from './Footer.js';\nimport '../Styling/Splash.css';\n\nclass Splash extends Component{\n  render(){\n    return(\n      <div className= \"splash-page\">\n        <header className= \"loginH\">Health Tracker</header>\n        \n        <Login />\n        <Reg />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default Splash;","import React, { Component } from \"react\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./components/home.js\";\nimport Splash from \"./components/Splash.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Splash} />\n          <Route exact path=\"/home\" component={Home} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}